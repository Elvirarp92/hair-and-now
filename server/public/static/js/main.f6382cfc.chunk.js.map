{"version":3,"sources":["services/auth.services.js","components/ui/lightNavbar/lightNavbar.js","components/pages/home/salonList/salonList.js","services/salons.services.js","components/pages/home/home.js","components/pages/proDashboard/salonCard/salonCard.js","components/pages/proDashboard/proDashboard.js","services/appointments.services.js","services/packs.services.js","components/pages/createAppt/createAppt.js","components/pages/editAppt/editAppt.js","components/pages/createSalon/createSalon.js","services/services.services.js","components/pages/packForm/packForm.js","components/pages/salonDetails/salonDetails.js","components/pages/signupForm/signupForm.js","components/pages/loginForm/loginForm.js","components/pages/confirm/confirm.js","components/App.js","serviceWorker.js","index.js"],"names":["services","signup","username","password","email","role","service","post","confirm","confirmCode","get","login","logout","isLoggedIn","this","axios","create","baseURL","process","withCredentials","LightNavbar","props","setTheUser","authService","state","AuthService","Navbar","bg","expand","Brand","href","bsPrefix","Toggle","aria-controls","Collapse","id","Nav","className","Link","loggedInUser","onClick","Component","SalonList","Card","as","style","width","ListGroup","variant","salons","map","elm","key","_id","to","Item","name","getSalons","queryString","getSalon","salonId","createSalon","type","address","schedule","Home","getAllSalons","salonService","then","response","setState","data","catch","err","console","log","componentDidMount","SalonService","Container","Row","Col","xs","s","m","Button","size","block","SalonCard","salon","appointments","length","idx","validated","dates","Date","parse","toLocaleString","ProDashboard","getSalonInfo","getUserAppts","getAppt","postNewAppt","editAppt","estimatedEndTime","deleteAppt","getPacks","getPack","postNewPack","price","editPack","deletePack","registerLocale","es","CreateAppt","handleDateChange","date","dateManager","pushDate","event","preventDefault","apptInfoCopy","apptInfo","push","handleInputChange","value","target","checked","handleSubmit","appointmentService","match","params","res","history","salonInfo","AppointmentService","packService","PackService","packs","Alert","Form","onSubmit","locale","showTimeSelect","timeFormat","timeIntervals","timeCaption","onChange","selected","dateFormat","Group","Label","Check","EditAppt","markForDeletion","check","markForDeletionCopy","removeDates","apptCopy","appointment","Object","entries","splice","validateDates","setMinutes","getMinutes","estimatedMinutes","appt","minuteArray","estimatedTime","sumTimes","reduce","acc","CreateSalon","salonInfoCopy","street","number","zipcode","town","province","complements","monday","openingDay","mondayOpeningDay","openingTime","mondayOpeningTime","closingTime","mondayClosingTime","tuesday","tuesdayOpeningDay","tuesdayOpeningTime","tuesdayClosingTime","wednesday","wednesdayOpeningDay","wednesdayOpeningTime","wednesdayClosingTime","thursday","thursdayOpeningDay","thursdayOpeningTime","thursdayClosingTime","friday","fridayOpeningDay","fridayOpeningTime","fridayClosingTime","saturday","saturdayOpeningDay","saturdayOpeningTime","saturdayClosingTime","sunday","sundayOpeningDay","sundayOpeningTime","sundayClosingTime","controlId","Control","placeholder","inline","label","getServices","PackForm","hasServicesCopy","hasServices","packObjCopy","packObj","Number","serviceArray","serviceService","ServiceService","SalonDetails","rating","src","alt","Accordion","Header","eventKey","Body","SignupForm","signupInfoCopy","signupInfo","Text","defaultChecked","LoginForm","loginInfoCopy","loginInfo","Confirm","confirming","disabled","Spinner","animation","aria-hidden","App","userObj","fetchUser","path","render","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.f6382cfc.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default class services {\n  constructor() {\n    this.service = axios.create({\n      baseURL: process.env.REACT_APP_API_URL,\n      withCredentials: true,\n    })\n  }\n\n  signup = ({ username, password, email, role }) =>\n    this.service.post('/signup', { username, password, email, role })\n\n  confirm = ( confirmCode ) => this.service.get(`/confirm/${confirmCode}`)\n\n  login = ({ username, password }) =>\n    this.service.post('/login', { username, password })\n\n  logout = () => this.service.post('/logout')\n\n  isLoggedIn = () => this.service.get('/isloggedin')\n}\n","import React, { Component } from 'react'\nimport AuthService from './../../../services/auth.services'\n\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\n\nimport './lightNavbar.css'\n\nclass LightNavbar extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n    this.authService = new AuthService()\n  }\n\n  logout = () => {\n    this.props.setTheUser(false)\n    this.authService.logout()\n  }\n\n  render() {\n    return (\n      <Navbar bg='light' expand='lg'>\n        <Navbar.Brand href='/' bsPrefix='brand'>\n          Hair & Now\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls='basic-navbar-nav' />\n        <Navbar.Collapse id='basic-navbar-nav'>\n          <Nav className='mr-auto'>\n            <Nav.Link href='/'>Inicio</Nav.Link>\n            {!this.props.loggedInUser ? (\n              <>\n                <Nav.Link href='/signup'>Registro</Nav.Link>\n                <Nav.Link href='/login'>Iniciar sesión</Nav.Link>\n              </>\n            ) : (\n              <>\n                <Nav.Link onClick={this.logout}>Cerrar sesión</Nav.Link>\n              </>\n            )}\n            {/* {this.props.loggedInUser && this.props.loggedInUser.role === 'client' ? (\n              <Nav.Link href='#'>Reservas</Nav.Link>\n            ) : null} */}\n            {this.props.loggedInUser && this.props.loggedInUser.role === 'professional' ? (\n              <Nav.Link href='/user/professionals/dashboard'>Gestión</Nav.Link>\n            ) : null}\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    )\n  }\n}\n\nexport default LightNavbar\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Card from 'react-bootstrap/Card'\nimport ListGroup from 'react-bootstrap/ListGroup'\n\nimport './salonList.css'\n\nconst SalonList = (props) => {\n  return (\n    <Card as='section' style={{ width: '18rem' }}>\n      <ListGroup variant='flush'>\n        {props.salons.map((elm) => (\n          <Link key={elm._id} to={`/salons/${elm._id}`}>\n            <ListGroup.Item className='salon-card'>{elm.name}</ListGroup.Item>\n          </Link>\n        ))}\n      </ListGroup>\n    </Card>\n  )\n}\n\nexport default SalonList\n","import axios from 'axios'\n\nexport default class services {\n  constructor() {\n    this.service = axios.create({\n      baseURL: process.env.REACT_APP_API_URL,\n      withCredentials: true,\n    })\n  }\n\n  getSalons = (queryString) => this.service.get(`/getsalons/search${queryString}`)\n  getSalon = (salonId) => this.service.get(`/getsalon/${salonId}`)\n  createSalon = ({ name, type, address, schedule }) => this.service.post(`/postnewsalon`, { name, type, address, schedule })\n\n}\n","import React, { Component } from 'react'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\n\nimport { Link } from 'react-router-dom'\n\nimport SalonList from './salonList/salonList'\n\nimport SalonService from './../../../services/salons.services'\n\nimport './home.css'\n\nclass Home extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      salons: [],\n    }\n    this.salonService = new SalonService()\n  }\n\n  getAllSalons = () => {\n    this.salonService\n      .getSalons('')\n      .then((response) => this.setState({ salons: response.data }))\n      .catch((err) => console.log(err))\n  }\n\n  componentDidMount = () => this.getAllSalons()\n\n  render() {\n    return (\n      <Container as='main'>\n        <Row as='section'>\n          <Col xs={12} s={12}>\n            <h1>Hair & Now</h1>\n          </Col>\n          <Col xs={12} s={12} m={6} className='is-flex is-centered'>\n            <SalonList salons={this.state.salons} />\n          </Col>\n          <Col xs={12} s={12} m={6}>\n            {/* <Accordion>\n              <Card>\n                <Accordion.Toggle as={Card.Header} eventKey='0'>\n                  Búsqueda avanzada\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey='0'>\n                  <Card.Body>Hello! I'm the body</Card.Body>\n                </Accordion.Collapse>\n              </Card>\n            </Accordion>\n            <Button size='lg' block='true' className='red-button'>\n              Buscar\n            </Button> */}\n            {!this.props.loggedInUser && (\n              <div>\n                <p className='pro-cta'>¿Profesional? Anúnciate con nosotros</p>\n                <Link to='/signup'>\n                  <Button size='lg' block='true' className='red-button'>\n                    Regístrate\n                  </Button>\n                </Link>\n              </div>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport default Home\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Button from 'react-bootstrap/Button'\n\nimport './salonCard.css'\n\nconst SalonCard = (props) => {\n  return (\n    <article>\n      <h2>{props.salon.name}</h2>\n      {props.salon.appointments.length > 0 ? (\n        props.salon.appointments.map((elm, idx) =>\n          elm.validated ? null : (\n            <div key={idx} className='is-flex service-container'>\n              <div>\n                {elm.services[0].services.map((elm, idx) => (\n                  <p key={idx}>{elm.name}</p>\n                ))}\n                <hr />\n                {elm.dates.map((elm, idx) => (\n                  <p key={idx}>{new Date(Date.parse(elm)).toLocaleString()}</p>\n                ))}\n              </div>\n              <Link to={`/appointment/edit/${elm._id}`}>\n                <Button className='red-button'>Gestionar cita</Button>\n              </Link>\n            </div>\n          )\n        )\n      ) : (\n        <p>No tienes citas pendientes de gestión</p>\n      )}\n      <nav className='is-flex is-centered'>\n        <Link to={`/packs/create/${props.salon._id}`}>\n          <Button className='red-button'>Gestión de servicios</Button>\n        </Link>\n      </nav>\n    </article>\n  )\n}\n\nexport default SalonCard\n","import React, { Component } from 'react'\nimport SalonService from './../../../services/salons.services'\n\nimport { Link } from 'react-router-dom'\n\nimport SalonCard from './salonCard/salonCard'\n\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\n\nimport './proDashboard.css'\n\nclass ProDashboard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n    this.salonService = new SalonService()\n  }\n\n  getSalonInfo = () => {\n    this.salonService\n      .getSalons(`?owner=${this.props.loggedInUser._id}`)\n      .then((response) => {\n        this.setState({ salons: response.data })\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  render() {\n    return (\n      <Container as='section'>\n        {this.props.loggedInUser && (\n          <div>\n            <h1>Panel de gestión</h1>\n            <p className='welcome'>¡Bienvenido, {this.props.loggedInUser.username}!</p>\n            {!this.state.salons\n              ? this.getSalonInfo()\n              : this.state.salons.map((elm) => <SalonCard key={elm._id} salon={elm} />)}\n            <Link to='/salons/create'>\n              <Button size='lg' block='true' className='red-button'>\n                Crear peluquería\n              </Button>\n            </Link>\n          </div>\n        )}\n      </Container>\n    )\n  }\n}\n\nexport default ProDashboard\n","import axios from 'axios'\n\nexport default class services {\n  constructor() {\n    this.service = axios.create({\n      baseURL: process.env.REACT_APP_API_URL,\n      withCredentials: true,\n    })\n  }\n\n  getUserAppts = (id) => this.service.get(`/getuserappts/${id}`)\n\n  getAppt = (id) => this.service.get(`/getappt/${id}`)\n\n  postNewAppt = ({ services, dates }, salonId) =>\n    this.service.post(`/postnewappt/${salonId}`, { services, dates })\n\n  editAppt = ({ services, dates, validated, estimatedEndTime }, id) =>\n    this.service.post(`/editappt/${id}`, { services, dates, validated, estimatedEndTime })\n\n  deleteAppt = (id) => this.service.post(`/deleteappt/${id}`)\n}\n","import axios from 'axios'\n\nexport default class services {\n  constructor() {\n    this.service = axios.create({\n      baseURL: process.env.REACT_APP_API_URL,\n      withCredentials: true,\n    })\n  }\n\n  getPacks = (salonId) => this.service.get(`/getpacks/${salonId}`)\n\n  getPack = (id) => this.service.get(`/getpack/${id}`)\n\n  postNewPack = ({ services, price }, salonId) =>\n    this.service.post(`/postnewpack/${salonId}`, { services, price })\n\n  editPack = ({ services, price }, id) => this.service.post(`/editpack/${id}`, { services, price })\n\n  deletePack = (id) => this.service.post(`/deletepack/${id}`)\n}\n","import React, { Component } from 'react'\nimport DatePicker from 'react-datepicker'\nimport { registerLocale } from 'react-datepicker'\nimport es from 'date-fns/locale/es'\n\nimport AppointmentService from './../../../services/appointments.services'\nimport PackService from './../../../services/packs.services'\nimport SalonService from './../../../services/salons.services'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Alert from 'react-bootstrap/Alert'\n\nimport 'react-datepicker/dist/react-datepicker.css'\nimport './createAppt.css'\n\nregisterLocale('es', es)\n\nclass CreateAppt extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      salonInfo: {},\n\n      apptInfo: {\n        dates: [],\n      },\n\n      dateManager: new Date(),\n    }\n    this.appointmentService = new AppointmentService()\n    this.packService = new PackService()\n    this.salonService = new SalonService()\n  }\n\n  getPacks() {\n    this.packService\n      .getPacks(this.props.match.params.salonId)\n      .then((response) => this.setState({ packs: response.data }))\n      .catch((err) => console.log(err))\n  }\n\n  getSalonInfo() {\n    const id = this.props.match.params.salonId\n    this.salonService\n      .getSalon(id)\n      .then((response) => this.setState({ salonInfo: response.data }))\n      .catch((err) => console.log(err))\n  }\n\n  handleDateChange = (date) => this.setState({ dateManager: date })\n\n  pushDate = (event) => {\n    event.preventDefault()\n    let apptInfoCopy = { ...this.state.apptInfo }\n    apptInfoCopy.dates.push(this.state.dateManager)\n    this.setState({ apptInfo: apptInfoCopy })\n  }\n\n  handleInputChange = (event) => {\n    let apptInfoCopy = { ...this.state.apptInfo }\n    const value = event.target.type === 'checkbox' ? event.target.checked : event.target.value\n    apptInfoCopy = { ...apptInfoCopy, [event.target.name]: value }\n    this.setState({ apptInfo: apptInfoCopy })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    this.appointmentService\n      .postNewAppt(this.state.apptInfo, this.props.match.params.salonId)\n      .then((res) => this.props.history.push(`/salons/${this.props.match.params.salonId}`))\n      .catch((err) => console.log(err))\n  }\n\n  componentDidMount = () => {\n    this.getPacks()\n    this.getSalonInfo()\n  }\n\n  render() {\n    return (\n      <Container as='section'>\n        <h1>Pedir cita en {this.state.salonInfo.name}</h1>\n        <h2>Elige fecha y hora</h2>\n        <p className='datetime-rec'>Te recomendamos introducir varias fechas alternativas</p>\n        {this.state.apptInfo.dates.length > 0 &&\n          this.state.apptInfo.dates.map((elm, idx) => (\n            <Alert key={idx} className='alert'>\n              {elm.toLocaleString('es-ES')}\n            </Alert>\n          ))}\n\n        <Form className='is-flex is-centered' onSubmit={this.pushDate}>\n          <DatePicker\n            locale='es'\n            showTimeSelect\n            timeFormat='HH:mm'\n            timeIntervals={15}\n            timeCaption='Hora'\n            className='date'\n            onChange={this.handleDateChange}\n            selected={this.state.dateManager}\n            dateFormat='d MMMM yyyy h:mm aa'\n          />\n          <Button className='red-button' type='submit'>\n            Añadir\n          </Button>\n        </Form>\n        <h2>Elige un pack de servicios</h2>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group onChange={this.handleInputChange}>\n            {this.state.packs &&\n              this.state.packs.map((elm) => (\n                <article key={elm._id} className='packCard'>\n                  <Form.Label>\n                    <Form.Check\n                      type='radio'\n                      name='services'\n                      id={`services${elm._id}`}\n                      value={elm._id}\n                    />\n                    {elm.services.map((elm) => (\n                      <p key={elm._id}>{elm.name}</p>\n                    ))}\n                  </Form.Label>\n                  <p className='price'>{elm.price} € </p>\n                </article>\n              ))}\n          </Form.Group>\n          {this.state.apptInfo.dates.length > 0 && (\n            <Button size='lg' block='true' className='red-button' type='submit'>\n              Crear\n            </Button>\n          )}\n        </Form>\n      </Container>\n    )\n  }\n}\n\nexport default CreateAppt\n","import React, { Component } from 'react'\n\nimport AppointmentService from './../../../services/appointments.services'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\n\nclass EditAppt extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      markForDeletion: {},\n    }\n    this.appointmentService = new AppointmentService()\n  }\n\n  getAppt() {\n    this.appointmentService\n      .getAppt(this.props.match.params.id)\n      .then((response) => {\n        const appt = response.data\n        appt.dates = appt.dates.map((elm) => new Date(Date.parse(elm)))\n        const minuteArray = []\n        const pack = appt.services[0]\n        pack.services.map((elm) => minuteArray.push(elm.estimatedTime))\n        //this gives us an estimated time in minutes\n        const sumTimes = minuteArray.reduce((acc, elm) => acc + elm)\n        this.setState({ appointment: appt, estimatedMinutes: sumTimes })\n      })\n      .catch((err) => console.log(err))\n  }\n\n  markForDeletion = (event) => {\n    const check = event.target.checked\n    let markForDeletionCopy = { ...this.state.markForDeletion }\n    markForDeletionCopy = { ...markForDeletionCopy, [event.target.name]: check }\n    this.setState({ markForDeletion: markForDeletionCopy })\n  }\n\n  removeDates = (event) => {\n    event.preventDefault()\n    const apptCopy = { ...this.state.appointment }\n    const markedForDeletion = Object.entries(this.state.markForDeletion)\n    markedForDeletion.map((elm) => (elm[1] ? apptCopy.dates.splice(elm[0], 1) : null))\n    this.setState({ appointment: apptCopy })\n  }\n\n  validateDates = (event) => {\n    event.preventDefault()\n\n    const apptCopy = { ...this.state.appointment }\n\n    if (apptCopy.dates.length > 0) {\n      apptCopy.estimatedEndTime = apptCopy.dates[0].setMinutes(\n        apptCopy.dates[0].getMinutes() + this.state.estimatedMinutes\n      )\n    }\n\n    apptCopy.validated = true\n\n    this.setState({ appointment: apptCopy })\n\n    this.appointmentService\n      .editAppt(apptCopy, this.props.match.params.id)\n      .then((res) => this.props.history.push('/user/professionals/dashboard'))\n      .catch((err) => console.log(err))\n  }\n\n  componentDidMount = () => this.getAppt()\n\n  render() {\n    return (\n      <Container as='section'>\n        <h1>Confirmar o rechazar cita</h1>\n        <p>\n          Elimina todas las fechas que no interesen, o todas si ninguna encaja, y dale a enviar para\n          informar al usuario.\n        </p>\n        <Form onSubmit={this.removeDates}>\n          {this.state.appointment &&\n            this.state.appointment.dates.map((elm, idx) => (\n              <Form.Group key={idx} className='is-flex'>\n                <Form.Label>{elm.toLocaleString('es-ES')}</Form.Label>\n                <Form.Check type='checkbox' name={idx} onChange={this.markForDeletion} />\n              </Form.Group>\n            ))}\n          <Button type='submit' size='lg' block='true' className='red-button'>\n            Eliminar fechas seleccionadas\n          </Button>\n        </Form>\n        {this.state.appointment && this.state.appointment.dates.length <= 1 && (\n          <Form onSubmit={this.validateDates}>\n            <Button type='submit' size='lg' block='true' className='red-button'>\n              Validar\n            </Button>\n          </Form>\n        )}\n      </Container>\n    )\n  }\n}\n\nexport default EditAppt\n","import React, { Component } from 'react'\nimport SalonService from './../../../services/salons.services'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nclass CreateSalon extends Component {\n  constructor() {\n    super()\n    this.state = {\n      salonInfo: {\n        name: '',\n        type: '',\n        street: '',\n        number: null,\n        zipcode: null,\n        town: '',\n        province: '',\n        complements: '',\n        mondayOpeningDay: false,\n        mondayOpeningTime: '',\n        mondayClosingTime: '',\n        tuesdayOpeningDay: false,\n        tuesdayOpeningTime: '',\n        tuesdayClosingTime: '',\n        wednesdayOpeningDay: false,\n        wednesdayOpeningTime: '',\n        wednesdayClosingTime: '',\n        thursdayOpeningDay: false,\n        thursdayOpeningTime: '',\n        thursdayClosingTime: '',\n        fridayOpeningDay: false,\n        fridayOpeningTime: '',\n        fridayClosingTime: '',\n        saturdayOpeningDay: false,\n        saturdayOpeningTime: '',\n        saturdayClosingTime: '',\n        sundayOpeningDay: false,\n        sundayOpeningTime: '',\n        sundayClosingTime: '',\n      },\n    }\n    this.salonService = new SalonService()\n  }\n\n  handleInputChange = (event) => {\n    let salonInfoCopy = { ...this.state.salonInfo }\n    const value = event.target.type === 'checkbox' ? event.target.checked : event.target.value\n    salonInfoCopy = { ...salonInfoCopy, [event.target.name]: value }\n    this.setState({ salonInfo: salonInfoCopy })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n\n    const salon = {\n      name: this.state.salonInfo.name,\n      type: this.state.salonInfo.type,\n      address: {\n        street: this.state.salonInfo.street,\n        number: this.state.salonInfo.number,\n        zipcode: this.state.salonInfo.zipcode,\n        town: this.state.salonInfo.town,\n        province: this.state.salonInfo.province,\n        complements: this.state.salonInfo.complements,\n      },\n      schedule: {\n        monday: {\n          openingDay: this.state.salonInfo.mondayOpeningDay,\n          openingTime: this.state.salonInfo.mondayOpeningTime,\n          closingTime: this.state.salonInfo.mondayClosingTime,\n        },\n        tuesday: {\n          openingDay: this.state.salonInfo.tuesdayOpeningDay,\n          openingTime: this.state.salonInfo.tuesdayOpeningTime,\n          closingTime: this.state.salonInfo.tuesdayClosingTime,\n        },\n        wednesday: {\n          openingDay: this.state.salonInfo.wednesdayOpeningDay,\n          openingTime: this.state.salonInfo.wednesdayOpeningTime,\n          closingTime: this.state.salonInfo.wednesdayClosingTime,\n        },\n        thursday: {\n          openingDay: this.state.salonInfo.thursdayOpeningDay,\n          openingTime: this.state.salonInfo.thursdayOpeningTime,\n          closingTime: this.state.salonInfo.thursdayClosingTime,\n        },\n        friday: {\n          openingDay: this.state.salonInfo.fridayOpeningDay,\n          openingTime: this.state.salonInfo.fridayOpeningTime,\n          closingTime: this.state.salonInfo.fridayClosingTime,\n        },\n        saturday: {\n          openingDay: this.state.salonInfo.saturdayOpeningDay,\n          openingTime: this.state.salonInfo.saturdayOpeningTime,\n          closingTime: this.state.salonInfo.saturdayClosingTime,\n        },\n        sunday: {\n          openingDay: this.state.salonInfo.sundayOpeningDay,\n          openingTime: this.state.salonInfo.sundayOpeningTime,\n          closingTime: this.state.salonInfo.sundayClosingTime,\n        },\n      },\n    }\n\n    this.salonService\n      .createSalon(salon)\n      .then((res) => this.props.history.push('/'))\n      .catch((err) => console.log(err))\n  }\n\n  render() {\n    return (\n      <Container>\n        <h1>Nueva peluquería</h1>\n        <Row className='is-flex is-centered'>\n          <Col xs={10}>\n            <Form onSubmit={this.handleSubmit}>\n              <Form.Group controlId='formName'>\n                <Form.Label>Nombre</Form.Label>\n                <Form.Control\n                  type='text'\n                  placeholder='Nombre de tu local'\n                  name='name'\n                  value={this.state.name}\n                  onChange={this.handleInputChange}\n                />\n              </Form.Group>\n              <Form.Group controlId='formType' onChange={this.handleInputChange}>\n                <Form.Check\n                  inline\n                  type='radio'\n                  label='Barbería'\n                  name='type'\n                  id='type1'\n                  value='barbería'\n                />\n                <Form.Check\n                  inline\n                  type='radio'\n                  label='Peluquería unisex'\n                  name='type'\n                  id='type3'\n                  value='peluquería unisex'\n                />\n                <Form.Check\n                  inline\n                  type='radio'\n                  label='Peluquería de señoras'\n                  name='type'\n                  id='type2'\n                  value='peluquería de señoras'\n                />\n                <Form.Check inline type='radio' label='Otro' name='type' id='type4' value='otro' />\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Calle/Plaza/Avenida</Form.Label>\n                <Form.Control\n                  type='text'\n                  placeholder='Calle Castilla'\n                  name='street'\n                  value={this.state.salonInfo.street}\n                  onChange={this.handleInputChange}\n                />\n              </Form.Group>\n              <Row>\n                <Col xs={6}>\n                  <Form.Group>\n                    <Form.Label>Número</Form.Label>\n                    <Form.Control\n                      type='number'\n                      name='number'\n                      value={this.state.salonInfo.number}\n                      onChange={this.handleInputChange}\n                    />\n                  </Form.Group>\n                </Col>\n                <Col xs={6}>\n                  <Form.Group>\n                    <Form.Label>Código postal</Form.Label>\n                    <Form.Control\n                      type='number'\n                      name='zipcode'\n                      value={this.state.salonInfo.zipcode}\n                      onChange={this.handleInputChange}\n                    />\n                  </Form.Group>\n                </Col>\n              </Row>\n              <Form.Group>\n                <Form.Label>Detalles dirección</Form.Label>\n                <Form.Control\n                  type='text'\n                  name='complements'\n                  placeholder='Pasaje, semisótano...'\n                  value={this.state.salonInfo.complements}\n                  onChange={this.handleInputChange}\n                />\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Localidad</Form.Label>\n                <Form.Control\n                  type='text'\n                  name='town'\n                  value={this.state.salonInfo.town}\n                  onChange={this.handleInputChange}\n                />\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Provincia</Form.Label>\n                <Form.Control\n                  type='text'\n                  name='province'\n                  value={this.state.salonInfo.province}\n                  onChange={this.handleInputChange}\n                />\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Días de apertura</Form.Label>\n                <br />\n                <Form.Check\n                  inline\n                  label='Lunes'\n                  type='checkbox'\n                  name='mondayOpeningDay'\n                  checked={this.state.mondayOpeningDay}\n                  onChange={this.handleInputChange}\n                />\n                <Form.Check\n                  inline\n                  label='Martes'\n                  type='checkbox'\n                  name='tuesdayOpeningDay'\n                  checked={this.state.tuesdayOpeningDay}\n                  onChange={this.handleInputChange}\n                />\n                <Form.Check\n                  inline\n                  label='Miércoles'\n                  type='checkbox'\n                  name='wednesdayOpeningDay'\n                  checked={this.state.wednesdayOpeningDay}\n                  onChange={this.handleInputChange}\n                />\n                <Form.Check\n                  inline\n                  label='Jueves'\n                  type='checkbox'\n                  name='thursdayOpeningDay'\n                  checked={this.state.thursdayOpeningDay}\n                  onChange={this.handleInputChange}\n                />\n                <Form.Check\n                  inline\n                  label='Viernes'\n                  type='checkbox'\n                  name='fridayOpeningDay'\n                  checked={this.state.fridayOpeningDay}\n                  onChange={this.handleInputChange}\n                />\n                <Form.Check\n                  inline\n                  label='Sábado'\n                  type='checkbox'\n                  name='saturdayOpeningDay'\n                  checked={this.state.saturdayOpeningDay}\n                  onChange={this.handleInputChange}\n                />\n                <Form.Check\n                  inline\n                  label='Domingo'\n                  type='checkbox'\n                  name='sundayOpeningDay'\n                  checked={this.state.sundayOpeningDay}\n                  onChange={this.handleInputChange}\n                />\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Lunes</Form.Label>\n                <Row>\n                  <Col xs={6}>\n                    <Form.Group>\n                      <Form.Label>Apertura</Form.Label>\n                      <Form.Control\n                        type='time'\n                        name='mondayOpeningTime'\n                        value={this.state.salonInfo.mondayOpeningTime}\n                        onChange={this.handleInputChange}\n                      />\n                    </Form.Group>\n                  </Col>\n                  <Col xs={6}>\n                    <Form.Group>\n                      <Form.Label>Cierre</Form.Label>\n                      <Form.Control\n                        type='time'\n                        name='mondayClosingTime'\n                        value={this.state.salonInfo.mondayClosingTime}\n                        onChange={this.handleInputChange}\n                      />\n                    </Form.Group>\n                  </Col>\n                </Row>\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Martes</Form.Label>\n                <Row>\n                  <Col xs={6}>\n                    <Form.Group>\n                      <Form.Label>Apertura</Form.Label>\n                      <Form.Control\n                        type='time'\n                        name='tuesdayOpeningTime'\n                        value={this.state.salonInfo.tuesdayOpeningTime}\n                        onChange={this.handleInputChange}\n                      />\n                    </Form.Group>\n                  </Col>\n                  <Col xs={6}>\n                    <Form.Group>\n                      <Form.Label>Cierre</Form.Label>\n                      <Form.Control\n                        type='time'\n                        name='tuesdayClosingTime'\n                        value={this.state.salonInfo.tuesdayClosingTime}\n                        onChange={this.handleInputChange}\n                      />\n                    </Form.Group>\n                  </Col>\n                </Row>\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Miércoles</Form.Label>\n                <Row>\n                  <Col xs={6}>\n                    <Form.Group>\n                      <Form.Label>Apertura</Form.Label>\n                      <Form.Control\n                        type='time'\n                        name='wednesdayOpeningTime'\n                        value={this.state.salonInfo.wednesdayOpeningTime}\n                        onChange={this.handleInputChange}\n                      />\n                    </Form.Group>\n                  </Col>\n                  <Col xs={6}>\n                    <Form.Group>\n                      <Form.Label>Cierre</Form.Label>\n                      <Form.Control\n                        type='time'\n                        name='wednesdayClosingTime'\n                        value={this.state.salonInfo.wednesdayClosingTime}\n                        onChange={this.handleInputChange}\n                      />\n                    </Form.Group>\n                  </Col>\n                </Row>\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Jueves</Form.Label>\n                <Row>\n                  <Col xs={6}>\n                    <Form.Group>\n                      <Form.Label>Apertura</Form.Label>\n                      <Form.Control\n                        type='time'\n                        name='thursdayOpeningTime'\n                        value={this.state.salonInfo.thursdayOpeningTime}\n                        onChange={this.handleInputChange}\n                      />\n                    </Form.Group>\n                  </Col>\n                  <Col xs={6}>\n                    <Form.Group>\n                      <Form.Label>Cierre</Form.Label>\n                      <Form.Control\n                        type='time'\n                        name='thursdayClosingTime'\n                        value={this.state.salonInfo.thursdayClosingTime}\n                        onChange={this.handleInputChange}\n                      />\n                    </Form.Group>\n                  </Col>\n                </Row>\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Viernes</Form.Label>\n                <Row>\n                  <Col xs={6}>\n                    <Form.Group>\n                      <Form.Label>Apertura</Form.Label>\n                      <Form.Control\n                        type='time'\n                        name='fridayOpeningTime'\n                        value={this.state.salonInfo.fridayOpeningTime}\n                        onChange={this.handleInputChange}\n                      />\n                    </Form.Group>\n                  </Col>\n                  <Col xs={6}>\n                    <Form.Group>\n                      <Form.Label>Cierre</Form.Label>\n                      <Form.Control\n                        type='time'\n                        name='fridayClosingTime'\n                        value={this.state.salonInfo.fridayClosingTime}\n                        onChange={this.handleInputChange}\n                      />\n                    </Form.Group>\n                  </Col>\n                </Row>\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Sábado</Form.Label>\n                <Row>\n                  <Col xs={6}>\n                    <Form.Group>\n                      <Form.Label>Apertura</Form.Label>\n                      <Form.Control\n                        type='time'\n                        name='saturdayOpeningTime'\n                        value={this.state.salonInfo.saturdayOpeningTime}\n                        onChange={this.handleInputChange}\n                      />\n                    </Form.Group>\n                  </Col>\n                  <Col xs={6}>\n                    <Form.Group>\n                      <Form.Label>Cierre</Form.Label>\n                      <Form.Control\n                        type='time'\n                        name='saturdayClosingTime'\n                        value={this.state.salonInfo.saturdayClosingTime}\n                        onChange={this.handleInputChange}\n                      />\n                    </Form.Group>\n                  </Col>\n                </Row>\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Domingo</Form.Label>\n                <Row>\n                  <Col xs={6}>\n                    <Form.Group>\n                      <Form.Label>Apertura</Form.Label>\n                      <Form.Control\n                        type='time'\n                        name='sundayOpeningTime'\n                        value={this.state.salonInfo.sundayOpeningTime}\n                        onChange={this.handleInputChange}\n                      />\n                    </Form.Group>\n                  </Col>\n                  <Col xs={6}>\n                    <Form.Group>\n                      <Form.Label>Cierre</Form.Label>\n                      <Form.Control\n                        type='time'\n                        name='sundayClosingTime'\n                        value={this.state.salonInfo.sundayClosingTime}\n                        onChange={this.handleInputChange}\n                      />\n                    </Form.Group>\n                  </Col>\n                </Row>\n              </Form.Group>\n              <Button size='lg' block='true' className='red-button' type='submit'>\n                Crear\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport default CreateSalon\n","import axios from 'axios'\n\nexport default class services {\n  constructor() {\n    this.service = axios.create({\n      baseURL: process.env.REACT_APP_API_URL,\n      withCredentials: true,\n    })\n  }\n\n  getServices = () => this.service.get(`/getservices`)\n}\n","import React, { Component } from 'react'\n\nimport PackService from './../../../services/packs.services'\nimport SalonService from './../../../services/salons.services'\nimport ServiceService from './../../../services/services.services'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Alert from 'react-bootstrap/Alert'\n\nimport './packForm.css'\n\nclass PackForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      packObj: {\n        services: [],\n        price: 0,\n      },\n\n      hasServices: {},\n    }\n    this.packService = new PackService()\n    this.salonService = new SalonService()\n    this.serviceService = new ServiceService()\n  }\n\n  getPacks() {\n    this.packService\n      .getPacks(this.props.match.params.salonId)\n      .then((response) => this.setState({ packs: response.data }))\n      .catch((err) => console.log(err))\n  }\n\n  getServices() {\n    this.serviceService\n      .getServices()\n      .then((response) => this.setState({ services: response.data }))\n      .catch((err) => console.log(err))\n  }\n\n  getSalonInfo() {\n    this.salonService\n      .getSalon(this.props.match.params.salonId)\n      .then((response) => {\n        this.setState({ salonInfo: response.data })\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  componentDidMount = () => {\n    this.getServices()\n    this.getPacks()\n    this.getSalonInfo()\n  }\n\n  handleInputChange = (event) => {\n    const value = event.target.type === 'checkbox' ? event.target.checked : event.target.value\n\n    if (event.target.type === 'checkbox') {\n      let hasServicesCopy = { ...this.state.hasServices }\n      hasServicesCopy = { ...hasServicesCopy, [event.target.name]: value }\n      this.setState({ hasServices: hasServicesCopy })\n    } else if (event.target.type === 'number') {\n      let packObjCopy = { ...this.state.packObj }\n      packObjCopy = { ...packObjCopy, [event.target.name]: Number(value) }\n      this.setState({ packObj: packObjCopy })\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    let packObjCopy = { ...this.state.packObj }\n    const hasServices = Object.entries(this.state.hasServices)\n    let serviceArray = []\n\n    hasServices.map((elm) => (elm[1] ? serviceArray.push(elm[0]) : null))\n    packObjCopy = { ...packObjCopy, services: serviceArray }\n    this.packService\n      .postNewPack(packObjCopy, this.props.match.params.salonId)\n      .then((res) => {\n        this.props.history.push('/')\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  render() {\n    return (\n      <Container as='section'>\n        {this.state.salonInfo && <h1>Gestionar servicios de {this.state.salonInfo.name}</h1>}\n        {this.state.packs && this.state.packs.length > 0 ? (\n          this.state.packs.map((elm) => (\n            <Alert key={elm._id} className='is-flex packs'>\n              <div>\n                {elm.services.map((elm) => (\n                  <p className='service-label'>{elm.name}</p>\n                ))}\n              </div>\n              <p className=\"price\">{elm.price} €</p>\n            </Alert>\n          ))\n        ) : (\n          <p>Aún no tienes packs asociados a este establecimiento</p>\n        )}\n        <hr />\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group>\n            {this.state.services &&\n              this.state.services.map((elm) => (\n                <Form.Check\n                  key={elm._id}\n                  type='checkbox'\n                  inline\n                  name={elm._id}\n                  label={elm.name}\n                  onChange={this.handleInputChange}\n                />\n              ))}\n          </Form.Group>\n          <Form.Group className='is-flex is-centered'>\n            <Form.Label>Precio (€)</Form.Label>\n            <Form.Control\n              type='number'\n              name='price'\n              value={this.state.packObj.price}\n              onChange={this.handleInputChange}\n            />\n          </Form.Group>\n          <Button size='lg' block='true' className='red-button' type='submit'>\n            Crear pack\n          </Button>\n        </Form>\n      </Container>\n    )\n  }\n}\n\nexport default PackForm\n","import React, { Component } from 'react'\nimport SalonService from './../../../services/salons.services'\n\nimport { Link } from 'react-router-dom'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\n\nimport './salonDetails.css'\n\nclass SalonDetails extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n    this.salonService = new SalonService()\n  }\n\n  getSalonInfo() {\n    this.salonService\n      .getSalon(this.props.match.params.id)\n      .then((response) => {\n        this.setState(response.data)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  componentDidMount = () => {\n    this.getSalonInfo()\n  }\n\n  render() {\n    return (\n      <Container>\n        <h1>{this.state.name}</h1>\n        <Row>\n          <Col>\n            <p className='salon-info-tidbits'>{this.state.type}</p>\n          </Col>\n          <Col>\n            <p className='rating-module'>{this.state.rating}/10</p>\n          </Col>\n        </Row>\n        {/* placeholder */}\n        <img src={`${process.env.PUBLIC_URL}/static/img/barber-seats-mirrors.jpg`} alt={this.state.name} />\n        {this.state.address && (\n          <p>{`${this.state.address.street}, ${this.state.address.number}, ${this.state.address.zipcode} ${this.state.address.town} (${this.state.address.province})`}</p>\n        )}\n        {!this.props.loggedInUser ? (\n          <Link to={`/login`}>\n            <Button size='lg' block='true' className='red-button'>\n              Inicia sesión para pedir cita\n            </Button>\n          </Link>\n        ) : (\n          <Link to={`/appointment/create/${this.props.match.params.id}`}>\n            <Button size='lg' block='true' className='red-button'>\n              Pedir cita\n            </Button>\n          </Link>\n        )}\n\n        <Accordion className='accordion-menu'>\n          <Card>\n            <Accordion.Toggle as={Card.Header} eventKey='0'>\n              Horario\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey='0'>\n              <Card.Body>\n                {this.state.schedule && (\n                  <div>\n                    <p>\n                      Lunes: {this.state.schedule.monday.openingTime} /\n                      {this.state.schedule.monday.closingTime}\n                    </p>\n                    <p>\n                      Martes: {this.state.schedule.tuesday.openingTime} /\n                      {this.state.schedule.tuesday.closingTime}\n                    </p>\n                    <p>\n                      Miércoles: {this.state.schedule.wednesday.openingTime} /\n                      {this.state.schedule.wednesday.closingTime}\n                    </p>\n                    <p>\n                      Jueves: {this.state.schedule.thursday.openingTime} /\n                      {this.state.schedule.thursday.closingTime}\n                    </p>\n                    <p>\n                      Viernes: {this.state.schedule.friday.openingTime} /\n                      {this.state.schedule.friday.closingTime}\n                    </p>\n                    <p>\n                      Sábado: {this.state.schedule.saturday.openingTime} /\n                      {this.state.schedule.saturday.closingTime}\n                    </p>\n                    <p>\n                      Domingo: {this.state.schedule.sunday.openingTime} /\n                      {this.state.schedule.sunday.closingTime}\n                    </p>\n                  </div>\n                )}\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n          {/* <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n                Comentarios\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"1\">\n                <Card.Body>Hello! I'm another body</Card.Body>\n              </Accordion.Collapse>\n            </Card> */}\n        </Accordion>\n      </Container>\n    )\n  }\n}\n\nexport default SalonDetails\n","import React, { Component } from 'react'\nimport AuthService from './../../../services/auth.services'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nclass SignupForm extends Component {\n  constructor() {\n    super()\n    this.state = {\n      signupInfo: {\n        username: '',\n        email: '',\n        password: '',\n        role: 'client',\n      },\n    }\n\n    this.authService = new AuthService()\n  }\n\n  handleInputChange = (event) => {\n    let signupInfoCopy = { ...this.state.signupInfo }\n    const { name, value } = event.target\n    signupInfoCopy = { ...signupInfoCopy, [name]: value }\n    this.setState({ signupInfo: signupInfoCopy })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    this.authService\n      .signup(this.state.signupInfo)\n      .then(() =>\n        this.state.signupInfo.role === 'client'\n          ? this.props.history.push('/')\n          : this.props.history.push('/salons/create')\n      )\n      .catch((err) => console.log(err))\n  }\n\n  render() {\n    return (\n      <Container>\n        <h1>Registro</h1>\n        <Row className='is-flex is-centered'>\n          <Col xs={10}>\n            <Form className='form-margin' onSubmit={this.handleSubmit}>\n              <Form.Group controlId='username'>\n                <Form.Label>Nombre de usuario</Form.Label>\n                <Form.Control\n                  type='text'\n                  placeholder='Usuario'\n                  name='username'\n                  value={this.state.username}\n                  onChange={this.handleInputChange}\n                />\n              </Form.Group>\n              <Form.Group controlId='email'>\n                <Form.Label>Correo electrónico</Form.Label>\n                <Form.Control\n                  type='email'\n                  name='email'\n                  placeholder='ejemplo@hairandnow.es'\n                  value={this.state.email}\n                  onChange={this.handleInputChange}\n                />\n                <Form.Text className='text-muted'>\n                  Nunca compartiremos tu correo con ninguna otra entidad.\n                </Form.Text>\n              </Form.Group>\n              <Form.Group controlId='password'>\n                <Form.Label>Contraseña</Form.Label>\n                <Form.Control\n                  type='password'\n                  name='password'\n                  placeholder='Contraseña'\n                  value={this.state.password}\n                  onChange={this.handleInputChange}\n                />\n              </Form.Group>\n              <Form.Group controlId='accountType' onChange={this.handleInputChange}>\n                <Form.Check\n                  inline\n                  type='radio'\n                  label='Cliente'\n                  name='role'\n                  id='role1'\n                  value='client'\n                  defaultChecked\n                />\n                <Form.Check\n                  inline\n                  type='radio'\n                  label='Profesional'\n                  name='role'\n                  id='role2'\n                  value='professional'\n                />\n              </Form.Group>\n              <Button size='lg' block='true' className='red-button' type='submit'>\n                Registrar\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport default SignupForm\n","import React, { Component } from 'react'\nimport AuthService from './../../../services/auth.services'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loginInfo: { username: '', password: '' },\n    }\n    this.authService = new AuthService()\n  }\n\n  handleInputChange = (event) => {\n    let loginInfoCopy = { ...this.state.loginInfo }\n    const { name, value } = event.target\n    loginInfoCopy = { ...loginInfoCopy, [name]: value }\n    this.setState({ loginInfo: loginInfoCopy })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    this.authService\n      .login(this.state.loginInfo)\n      .then((res) => {\n        this.props.setTheUser(res.data)\n        this.props.history.push('/')\n      })\n      .catch((err) => console.log(err))\n  }\n\n  render() {\n    return (\n      <Container>\n        <h1>Inicio de sesión</h1>\n        <Row className='form-margin is-flex is-centered'>\n          <Col xs={10}>\n            <Form onSubmit={this.handleSubmit}>\n              <Form.Group controlId='username'>\n                <Form.Label>Nombre de usuario</Form.Label>\n                <Form.Control\n                  type='text'\n                  placeholder='Usuario'\n                  name='username'\n                  value={this.state.username}\n                  onChange={this.handleInputChange}\n                />\n              </Form.Group>\n              <Form.Group controlId='password'>\n                <Form.Label>Contraseña</Form.Label>\n                <Form.Control\n                  type='password'\n                  name='password'\n                  placeholder='Contraseña'\n                  value={this.state.password}\n                  onChange={this.handleInputChange}\n                />\n              </Form.Group>\n              <Button size='lg' block='true' className='red-button' type='submit'>\n                Registrar\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport default LoginForm\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport AuthService from './../../../services/auth.services'\n\nimport Spinner from 'react-bootstrap/Spinner'\nimport Button from 'react-bootstrap/Button'\n\nclass Confirm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      confirming: true,\n    }\n    this.authService = new AuthService()\n  }\n\n  componentDidMount = () => {\n    const { id } = this.props.match.params\n    this.authService\n      .confirm(id)\n      .then((data) => this.setState({ confirming: false }))\n      .catch((err) => console.log(err))\n  }\n\n  render() {\n    return (\n      <main>\n        {this.state.confirming ? (\n          <Button size='lg' block='true' className='red-button' disabled>\n            <Spinner as='span' animation='grow' size='sm' role='status' aria-hidden='true' />\n            Confirmando...\n          </Button>\n        ) : (\n          <Link to='/'>\n            <Button size='lg' block='true' className='red-button'>\n              Volver a Inicio\n            </Button>\n          </Link>\n        )}\n      </main>\n    )\n  }\n}\n\nexport default Confirm\n","import React, { Component } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport AuthService from './../services/auth.services'\n\nimport LightNavbar from './ui/lightNavbar/lightNavbar'\n\nimport Home from './pages/home/home'\nimport ProDashboard from './pages/proDashboard/proDashboard'\nimport CreateAppt from './pages/createAppt/createAppt'\nimport EditAppt from './pages/editAppt/editAppt'\nimport CreateSalon from './pages/createSalon/createSalon'\nimport PackForm from './pages/packForm/packForm'\nimport SalonDetails from './pages/salonDetails/salonDetails'\nimport SignupForm from './pages/signupForm/signupForm'\nimport LoginForm from './pages/loginForm/loginForm'\nimport Confirm from './pages/confirm/confirm'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = { loggedInUser: null }\n    this.authService = new AuthService()\n  }\n\n  setTheUser = (userObj) => this.setState({ loggedInUser: userObj })\n\n  fetchUser = () => {\n    if (this.state.loggedInUser === null) {\n      this.authService\n        .isLoggedIn()\n        .then((response) => this.setTheUser(response.data))\n        .catch(() => this.setTheUser(false))\n    }\n  }\n\n  render() {\n    this.fetchUser()\n\n    return (\n      <>\n        <LightNavbar setTheUser={this.setTheUser} loggedInUser={this.state.loggedInUser} />\n        <Switch>\n          <Route\n            path='/user/professionals/dashboard'\n            render={(props) => <ProDashboard {...props} loggedInUser={this.state.loggedInUser} />}\n          />\n          <Route\n            path='/appointment/create/:salonId'\n            render={(props) => <CreateAppt {...props} />}\n          />\n          <Route path='/appointment/edit/:id' render={(props) => <EditAppt {...props} />} />\n          <Route\n            path='/packs/create/:salonId'\n            render={(props) => <PackForm {...props} loggedInUser={this.state.loggedInUser} />}\n          />\n          <Route path='/confirm/:id' render={(props) => <Confirm {...props} />} />\n          <Route path='/salons/create' render={(props) => <CreateSalon {...props} />} />\n          <Route\n            path='/salons/:id'\n            render={(props) => <SalonDetails {...props} loggedInUser={this.state.loggedInUser} />}\n          />\n          <Route\n            path='/signup'\n            render={(props) => <SignupForm {...props} setTheUser={this.setTheUser} />}\n          />\n          <Route\n            path='/login'\n            render={(props) => <LoginForm {...props} setTheUser={this.setTheUser} />}\n          />\n          <Route path='/' render={(props) => <Home {...props} loggedInUser={this.state.loggedInUser} />} />\n        </Switch>\n      </>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}